# -*- coding: utf-8 -*-
"""bai_4_nguyenvanan.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zTizcqeoiOmkJTtR29iXUegDwwoZHxY3
"""

# Commented out IPython magic to ensure Python compatibility.
# %reload_ext rpy2.ipython

# Commented out IPython magic to ensure Python compatibility.
# %%R
# library(readr) #read in the data
# library(ggplot2)
# install.packages("ggplot2")
# install.packages("corrplot")
# install.packages("ggcorrplot")
# library(corrplot) #visualization of correlation
# library(ggcorrplot) #visualization of correlation
# library(reshape2) #melt function
# library(dplyr) #used for data transformations
# library(tidyverse) #used for data transformations
# insurance <- read_csv(file = "insurance.csv")

# Commented out IPython magic to ensure Python compatibility.
# %%R
# summary(insurance)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# ggplot(data = melt(insurance[, -6]), mapping = aes(x = value)) + 
#   geom_histogram(bins = 10) + facet_wrap(~variable, scales = "free_x")

# Commented out IPython magic to ensure Python compatibility.
# %%R
# ggplot(data = insurance) +
# geom_bar(mapping = aes(x = as.factor(sex)))

# Commented out IPython magic to ensure Python compatibility.
# %%R
# ggplot(data = insurance) + 
# geom_bar(mapping = aes(x = smoker))

# Commented out IPython magic to ensure Python compatibility.
# %%R
# ggplot(data = insurance) + 
# geom_bar(mapping = aes(x= region))

# Commented out IPython magic to ensure Python compatibility.
# %%R
# insurance %>%
#   ggplot(aes(x=smoker, y = charges)) +
#   geom_boxplot() + #smokers associated with ~$30,000 higher mean charge amount
#   ggtitle("Charges for Smokers vs Non-Smokers")

# Commented out IPython magic to ensure Python compatibility.
# %%R
# insurance %>%
#   ggplot(aes(x=age, y = charges)) + 
#   geom_point(aes(color = smoker)) + 
#   ggtitle("Charges vs Age")

# Commented out IPython magic to ensure Python compatibility.
# %%R
# insurance %>%
#   ggplot(aes(x=age, y = charges)) + 
#   geom_point(aes(color = smoker, size = bmi, alpha = .05)) + 
#   ggtitle("Charges vs Age")

# Commented out IPython magic to ensure Python compatibility.
# %%R
# insurance %>%
#   ggplot(aes(x=as.factor(children), y = charges)) + 
#   geom_boxplot() + 
#   ggtitle("Charges vs Number of Children")

# Commented out IPython magic to ensure Python compatibility.
# %%R
# insurance %>%
#   ggplot(aes(x= sex, y = charges)) + 
#   geom_boxplot() + 
#   ggtitle("Charges for Males vs Females")

# Commented out IPython magic to ensure Python compatibility.
# %%R
# insurance <- insurance %>%
# mutate(obese = ifelse(bmi >= 30, "yes", "no"))
# head(insurance)
# averageCharges <- insurance %>%
#   group_by(smoker, obese) %>%
#   summarise(
#     count = n(),
#     average_charge = mean(charges, na.rm = TRUE), 
#     stdev_charge = sd(charges, na.rm = TRUE)
#   )
# print(averageCharges)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# insurance$obese <- as.factor(insurance$obese)
# insurance$smoker <- as.factor(insurance$smoker)
# insurance$sex <- as.factor(insurance$sex)
# insurance$region <- as.factor(insurance$region)
# 
# set.seed(134) 
# sampleSize <- floor(.75*nrow(insurance))
# trainIndexes <- sample(seq_len(nrow(insurance)), sampleSize, replace = FALSE) 
# train <- insurance[trainIndexes, ]
# test <- insurance[-trainIndexes, ]

# Commented out IPython magic to ensure Python compatibility.
# %%R
# par(mfrow = c(2,2))
# lm.fit.m.1 <- lm(charges ~ . - bmi, data = train)
# summary(lm.fit.m.1)
# plot(lm.fit.m.1)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# par(mfrow = c(2,2))
# lm.fit.m.2 <- lm(charges ~ . - bmi - sex - region, data = train)
# summary(lm.fit.m.2)
# plot(lm.fit.m.2)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# par(mfrow = c(2,2))
# lm.fit.m.3 <- lm(charges ~ obese*smoker + age + children, data = train)
# summary(lm.fit.m.3)
# plot(lm.fit.m.3)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# par(mfrow = c(2,2))
# lm.fit.m.4 <- lm(charges ~ obese*smoker + age, data = train)
# summary(lm.fit.m.4) 
# plot(lm.fit.m.4)

# Commented out IPython magic to ensure Python compatibility.
# %%R
# test$predicted <- predict(lm.fit.m.4, newdata = test)
# test %>%
#   ggplot() +
#   geom_point(aes(x = predicted, y = charges, color = smoker, shape = obese)) +
#   geom_abline(color = "red") +
#   ggtitle("Prediction vs. Real Values")

# Commented out IPython magic to ensure Python compatibility.
# %%R
# test$residuals <- test$charges - test$predicted
# 
# test %>%
#   ggplot() +
#   geom_pointrange(aes(x=predicted, y=residuals, ymin = 0, ymax = residuals, color = smoker, shape = obese)) +
#   geom_hline(yintercept = 0) +
# ggtitle("Residuals vs. Fitted Values")